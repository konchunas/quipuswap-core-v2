{ parameter
    (or (or (or (pair %ban_baker (key_hash %baker) (nat %ban_period)) (unit %default))
            (or (pair %divest_tez (contract %receiver unit) (pair (address %user) (nat %amt)))
                (address %invest_tez)))
        (or (pair %vote
               (address %voter)
               (pair (key_hash %candidate)
                     (pair (nat %votes) (pair (nat %cycle_duration) (bool %execute_voting)))))
            (pair %withdraw_rewards
               (contract %receiver unit)
               (pair (address %user) (pair (nat %current_balance) (nat %new_balance)))))) ;
  storage
    (pair (big_map %users
             address
             (pair (option %candidate key_hash) (pair (nat %tez_bal) (nat %votes))))
          (pair (big_map %bakers
                   key_hash
                   (pair (timestamp %ban_start_time) (pair (nat %ban_period) (nat %votes))))
                (pair (big_map %users_rewards address (pair (nat %reward) (nat %reward_paid)))
                      (pair (key_hash %current_delegated)
                            (pair (key_hash %next_candidate)
                                  (pair (address %baker_registry)
                                        (pair (address %dex_core)
                                              (pair (nat %pair_id)
                                                    (pair (nat %total_votes)
                                                          (pair (nat %reward)
                                                                (pair (nat %total_reward)
                                                                      (pair (nat %reward_paid)
                                                                            (pair (nat %reward_per_share)
                                                                                  (pair (nat %reward_per_second)
                                                                                        (pair (nat %cycle_duration) (pair (nat %period_finish) (nat %last_update_level))))))))))))))))) ;
  code { PUSH string "200" ;
         PUSH string "202" ;
         PUSH string "201" ;
         PAIR ;
         PAIR ;
         PUSH key_hash "tz1ZZZZZZZZZZZZZZZZZZZZZZZZZZZZNkiRg" ;
         PUSH address "tz1ZZZZZZZZZZZZZZZZZZZZZZZZZZZZNkiRg" ;
         PUSH nat 12 ;
         PAIR ;
         PUSH nat 1000000000000000000 ;
         EMPTY_MAP string bytes ;
         PUSH bytes 0x68747470733a2f2f7175697075737761702e636f6d2f51504c502e706e67 ;
         SOME ;
         PUSH string "thumbnailUri" ;
         UPDATE ;
         PUSH bytes 0x515054 ;
         SOME ;
         PUSH string "symbol" ;
         UPDATE ;
         PUSH bytes 0x74727565 ;
         SOME ;
         PUSH string "shouldPreferSymbol" ;
         UPDATE ;
         PUSH bytes 0x517569707573776170204c5020546f6b656e ;
         SOME ;
         PUSH string "name" ;
         UPDATE ;
         PUSH bytes
              0x517569707573776170204c5020746f6b656e20726570726573656e7473207573657220736861726520696e20746865206c697175696469747920706f6f6c ;
         SOME ;
         PUSH string "description" ;
         UPDATE ;
         PUSH bytes 0x36 ;
         SOME ;
         PUSH string "decimals" ;
         UPDATE ;
         PAIR ;
         PAIR ;
         PAIR ;
         LAMBDA
           address
           unit
           { PUSH string "303" ;
             SWAP ;
             SENDER ;
             COMPARE ;
             EQ ;
             IF { DROP } { FAILWITH } ;
             UNIT } ;
         LAMBDA
           (pair address (big_map address (pair nat nat)))
           (pair nat nat)
           { UNPAIR ; GET ; IF_NONE { PUSH nat 0 ; PUSH nat 0 ; SWAP ; PAIR } {} } ;
         DUP 4 ;
         DUP 4 ;
         PAIR ;
         LAMBDA
           (pair (pair (pair (pair (pair (map string bytes) nat) (pair nat address)) key_hash)
                       (pair (pair string string) string))
                 (pair (big_map address (pair (option key_hash) (pair nat nat)))
                       (pair (big_map key_hash (pair timestamp (pair nat nat)))
                             (pair (big_map address (pair nat nat))
                                   (pair key_hash
                                         (pair key_hash
                                               (pair address
                                                     (pair address
                                                           (pair nat
                                                                 (pair nat (pair nat (pair nat (pair nat (pair nat (pair nat (pair nat (pair nat nat)))))))))))))))))
           (pair (big_map address (pair (option key_hash) (pair nat nat)))
                 (pair (big_map key_hash (pair timestamp (pair nat nat)))
                       (pair (big_map address (pair nat nat))
                             (pair key_hash
                                   (pair key_hash
                                         (pair address
                                               (pair address
                                                     (pair nat
                                                           (pair nat (pair nat (pair nat (pair nat (pair nat (pair nat (pair nat (pair nat nat))))))))))))))))
           { UNPAIR ;
             UNPAIR ;
             DIG 2 ;
             DUP ;
             GET 13 ;
             NIL nat ;
             DUP 3 ;
             GET 15 ;
             CONS ;
             VIEW "get_total_supply" (list (pair (nat %request) (nat %total_supply))) ;
             IF_NONE { DIG 2 ; CAR ; CDR ; FAILWITH } { DIG 3 ; DROP } ;
             SWAP ;
             DUP ;
             DUG 2 ;
             GET 15 ;
             SWAP ;
             PUSH nat 0 ;
             SWAP ;
             ITER { SWAP ;
                    DUP 3 ;
                    DUP 3 ;
                    CAR ;
                    COMPARE ;
                    EQ ;
                    IF { DROP ; CDR } { SWAP ; DROP } } ;
             SWAP ;
             DROP ;
             SWAP ;
             DUP ;
             DUG 2 ;
             GET 31 ;
             LEVEL ;
             COMPARE ;
             GT ;
             IF { SWAP ; DUP ; DUG 2 ; GET 31 } { LEVEL } ;
             DUP 3 ;
             GET 27 ;
             DUP 4 ;
             GET 32 ;
             DIG 2 ;
             SUB ;
             ABS ;
             MUL ;
             DUP 3 ;
             DUP 3 ;
             DIG 2 ;
             EDIV ;
             IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
             CAR ;
             DIG 3 ;
             GET 25 ;
             ADD ;
             UPDATE 25 ;
             LEVEL ;
             UPDATE 32 ;
             DUP ;
             GET 31 ;
             LEVEL ;
             COMPARE ;
             GT ;
             IF { DUP 3 ;
                  CAR ;
                  CDR ;
                  CAR ;
                  PUSH nat 1 ;
                  DUP 5 ;
                  CAR ;
                  CDR ;
                  CAR ;
                  DUP 4 ;
                  GET 31 ;
                  LEVEL ;
                  SUB ;
                  ABS ;
                  EDIV ;
                  IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                  CAR ;
                  ADD ;
                  MUL ;
                  SWAP ;
                  DUP ;
                  DUG 2 ;
                  SWAP ;
                  DUP ;
                  DUG 2 ;
                  DUP 6 ;
                  CAR ;
                  CAR ;
                  CDR ;
                  DIG 4 ;
                  GET 19 ;
                  MUL ;
                  EDIV ;
                  IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                  CAR ;
                  UPDATE 27 ;
                  DUP ;
                  GET 27 ;
                  SWAP ;
                  DUP ;
                  DUG 2 ;
                  GET 31 ;
                  LEVEL ;
                  SUB ;
                  ABS ;
                  MUL ;
                  SWAP ;
                  DUP ;
                  DUG 2 ;
                  DUP 4 ;
                  DIG 3 ;
                  GET 31 ;
                  ADD ;
                  UPDATE 31 ;
                  DUP ;
                  DIG 4 ;
                  DIG 3 ;
                  EDIV ;
                  IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                  CAR ;
                  DIG 2 ;
                  GET 25 ;
                  ADD ;
                  UPDATE 25 ;
                  PUSH nat 0 ;
                  UPDATE 19 ;
                  DUP ;
                  DIG 3 ;
                  CAR ;
                  CAR ;
                  CDR ;
                  DIG 3 ;
                  DUP 4 ;
                  GET 27 ;
                  MUL ;
                  EDIV ;
                  IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                  CAR ;
                  DIG 2 ;
                  GET 21 ;
                  ADD ;
                  UPDATE 21 }
                { SWAP ; DIG 2 ; DROP 2 } } ;
         SWAP ;
         APPLY ;
         DIG 5 ;
         UNPAIR ;
         IF_LEFT
           { DIG 3 ;
             DIG 5 ;
             DROP 2 ;
             IF_LEFT
               { DIG 4 ;
                 DROP ;
                 IF_LEFT
                   { DIG 2 ;
                     DROP ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     GET 13 ;
                     DIG 3 ;
                     SWAP ;
                     EXEC ;
                     DROP ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     GET 3 ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     GET ;
                     IF_NONE
                       { PUSH timestamp 0 ; PUSH nat 0 ; PUSH nat 0 ; SWAP ; PAIR ; SWAP ; PAIR }
                       {} ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     UPDATE 3 ;
                     NOW ;
                     UPDATE 1 ;
                     DIG 2 ;
                     DUP ;
                     GET 3 ;
                     DIG 2 ;
                     DIG 3 ;
                     CAR ;
                     SWAP ;
                     SOME ;
                     SWAP ;
                     UPDATE ;
                     UPDATE 3 ;
                     NIL operation ;
                     PAIR }
                   { DIG 3 ;
                     DROP 2 ;
                     EXEC ;
                     DUP ;
                     PUSH mutez 1 ;
                     AMOUNT ;
                     EDIV ;
                     IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                     CAR ;
                     DIG 2 ;
                     GET 19 ;
                     ADD ;
                     UPDATE 19 ;
                     NIL operation ;
                     PAIR } }
               { DIG 2 ;
                 DROP ;
                 IF_LEFT
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     GET 13 ;
                     DIG 3 ;
                     SWAP ;
                     EXEC ;
                     DROP ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     GET 3 ;
                     GET ;
                     IF_NONE
                       { NONE key_hash ; PUSH nat 0 ; PUSH nat 0 ; SWAP ; PAIR ; SWAP ; PAIR }
                       {} ;
                     DIG 3 ;
                     CDR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     GET 3 ;
                     DUP 4 ;
                     GET 4 ;
                     COMPARE ;
                     LE ;
                     PUSH mutez 1 ;
                     BALANCE ;
                     EDIV ;
                     IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                     CAR ;
                     DUP 5 ;
                     GET 4 ;
                     COMPARE ;
                     LE ;
                     AND ;
                     IF { DROP } { FAILWITH } ;
                     DIG 2 ;
                     DUP ;
                     CAR ;
                     DUP 3 ;
                     DUP 5 ;
                     GET 4 ;
                     DIG 4 ;
                     GET 3 ;
                     SUB ;
                     ABS ;
                     UPDATE 3 ;
                     DUP 4 ;
                     GET 3 ;
                     SWAP ;
                     SOME ;
                     SWAP ;
                     UPDATE ;
                     UPDATE 1 ;
                     NIL operation ;
                     DUP 3 ;
                     GET 4 ;
                     DIG 3 ;
                     CAR ;
                     PUSH mutez 1 ;
                     DIG 2 ;
                     MUL ;
                     UNIT ;
                     TRANSFER_TOKENS ;
                     CONS ;
                     PAIR }
                   { DIG 3 ;
                     DROP ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     GET 13 ;
                     DIG 3 ;
                     SWAP ;
                     EXEC ;
                     DROP ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     GET ;
                     IF_NONE
                       { NONE key_hash ; PUSH nat 0 ; PUSH nat 0 ; SWAP ; PAIR ; SWAP ; PAIR }
                       {} ;
                     DIG 2 ;
                     DUP ;
                     CAR ;
                     DUP 3 ;
                     PUSH mutez 1 ;
                     AMOUNT ;
                     EDIV ;
                     IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                     CAR ;
                     DIG 4 ;
                     GET 3 ;
                     ADD ;
                     UPDATE 3 ;
                     DIG 3 ;
                     SWAP ;
                     SOME ;
                     SWAP ;
                     UPDATE ;
                     UPDATE 1 ;
                     NIL operation ;
                     PAIR } } }
           { IF_LEFT
               { DIG 2 ;
                 DIG 3 ;
                 DROP 2 ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 GET 13 ;
                 DIG 3 ;
                 SWAP ;
                 EXEC ;
                 DROP ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 GET ;
                 IF_NONE
                   { NONE key_hash ; PUSH nat 0 ; PUSH nat 0 ; SWAP ; PAIR ; SWAP ; PAIR }
                   {} ;
                 DUP ;
                 CAR ;
                 IF_NONE
                   { DUP 3 }
                   { DUP 4 ;
                     GET 3 ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     GET ;
                     IF_NONE
                       { PUSH timestamp 0 ; PUSH nat 0 ; PUSH nat 0 ; SWAP ; PAIR ; SWAP ; PAIR }
                       {} ;
                     DIG 4 ;
                     DUP ;
                     DUP ;
                     DUG 6 ;
                     GET 3 ;
                     DUP 5 ;
                     GET 4 ;
                     DUP 4 ;
                     GET 4 ;
                     SUB ;
                     ISNAT ;
                     IF_NONE { DIG 2 } { DIG 3 ; SWAP ; UPDATE 4 } ;
                     DIG 3 ;
                     SWAP ;
                     SOME ;
                     SWAP ;
                     UPDATE ;
                     UPDATE 3 } ;
                 DUP ;
                 GET 3 ;
                 DUP 4 ;
                 GET 3 ;
                 GET ;
                 IF_NONE
                   { PUSH timestamp 0 ; PUSH nat 0 ; PUSH nat 0 ; SWAP ; PAIR ; SWAP ; PAIR }
                   {} ;
                 DUP 4 ;
                 GET 5 ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 GET 4 ;
                 ADD ;
                 DIG 2 ;
                 DUP ;
                 GET 3 ;
                 DUP 4 ;
                 DUP 7 ;
                 GET 3 ;
                 SWAP ;
                 SOME ;
                 SWAP ;
                 UPDATE ;
                 UPDATE 3 ;
                 DUP ;
                 CAR ;
                 PUSH nat 0 ;
                 DUP 6 ;
                 GET 4 ;
                 COMPARE ;
                 NEQ ;
                 IF { DIG 4 ; DUP 6 ; GET 3 ; SOME ; UPDATE 1 }
                    { DIG 4 ; NONE key_hash ; UPDATE 1 } ;
                 DUP 6 ;
                 GET 5 ;
                 UPDATE 4 ;
                 DUP 6 ;
                 CAR ;
                 SWAP ;
                 SOME ;
                 SWAP ;
                 UPDATE ;
                 UPDATE 1 ;
                 DUP ;
                 GET 3 ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 GET 7 ;
                 GET ;
                 IF_NONE
                   { PUSH timestamp 0 ; PUSH nat 0 ; PUSH nat 0 ; SWAP ; PAIR ; SWAP ; PAIR }
                   {} ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 GET 3 ;
                 DUP 3 ;
                 GET 9 ;
                 GET ;
                 IF_NONE
                   { PUSH timestamp 0 ; PUSH nat 0 ; PUSH nat 0 ; SWAP ; PAIR ; SWAP ; PAIR }
                   {} ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 GET 4 ;
                 DIG 4 ;
                 COMPARE ;
                 GT ;
                 IF { DIG 3 ; DROP ; DIG 2 ; DUP ; GET 7 ; UPDATE 9 ; DUP 4 ; GET 3 ; UPDATE 7 }
                    { DUP 3 ;
                      GET 7 ;
                      DUP 6 ;
                      GET 3 ;
                      COMPARE ;
                      NEQ ;
                      SWAP ;
                      DUP ;
                      DUG 2 ;
                      GET 4 ;
                      DIG 5 ;
                      GET 4 ;
                      COMPARE ;
                      GT ;
                      AND ;
                      IF { DIG 2 ; DUP 4 ; GET 3 ; UPDATE 9 }
                         { SWAP ;
                           DUP ;
                           DUG 2 ;
                           GET 4 ;
                           SWAP ;
                           DUP ;
                           DUG 2 ;
                           GET 4 ;
                           COMPARE ;
                           GT ;
                           IF { DIG 2 ; DUP ; DUP ; DUG 4 ; GET 9 ; UPDATE 7 ; DIG 3 ; GET 7 ; UPDATE 9 }
                              { DIG 2 } } } ;
                 NIL operation ;
                 DIG 4 ;
                 GET 8 ;
                 IF { NOW ;
                      DUP 4 ;
                      GET 3 ;
                      INT ;
                      DIG 4 ;
                      CAR ;
                      ADD ;
                      COMPARE ;
                      GT ;
                      IF { SWAP ; DUP 5 ; CDR ; UPDATE 9 } { SWAP } ;
                      NOW ;
                      DUP 4 ;
                      GET 3 ;
                      INT ;
                      DIG 4 ;
                      CAR ;
                      ADD ;
                      COMPARE ;
                      GT ;
                      IF { SWAP ;
                           DIG 2 ;
                           DIG 4 ;
                           DROP 3 ;
                           NIL operation ;
                           NONE key_hash ;
                           SET_DELEGATE ;
                           CONS ;
                           SWAP ;
                           DIG 2 ;
                           CDR ;
                           UPDATE 7 ;
                           SWAP ;
                           PAIR }
                         { DIG 3 ;
                           DROP ;
                           DIG 2 ;
                           GET 7 ;
                           SWAP ;
                           DUP ;
                           DUG 2 ;
                           GET 7 ;
                           COMPARE ;
                           NEQ ;
                           IF { SWAP ;
                                DROP ;
                                NIL operation ;
                                SWAP ;
                                DUP ;
                                DUG 2 ;
                                GET 7 ;
                                SOME ;
                                SET_DELEGATE ;
                                CONS ;
                                SWAP ;
                                DUP ;
                                DUG 2 ;
                                GET 11 ;
                                CONTRACT %validate key_hash ;
                                IF_NONE { DIG 2 ; CAR ; CAR ; FAILWITH } { DIG 3 ; DROP } ;
                                PUSH mutez 0 ;
                                DUP 4 ;
                                GET 7 ;
                                TRANSFER_TOKENS ;
                                CONS }
                              { DIG 2 ; DROP ; SWAP } ;
                           PAIR } }
                    { DIG 2 ; DIG 3 ; DIG 4 ; DIG 5 ; DIG 6 ; DROP 5 ; PAIR } }
               { DIG 6 ;
                 DROP ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 GET 13 ;
                 DIG 5 ;
                 SWAP ;
                 EXEC ;
                 DROP ;
                 SWAP ;
                 DIG 2 ;
                 SWAP ;
                 EXEC ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 GET 6 ;
                 PAIR ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 GET 5 ;
                 DUP 3 ;
                 GET 3 ;
                 DIG 2 ;
                 UNPAIR ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 GET 5 ;
                 DUP 4 ;
                 PAIR ;
                 DUP 7 ;
                 SWAP ;
                 EXEC ;
                 DUP 3 ;
                 GET 25 ;
                 DIG 5 ;
                 MUL ;
                 SWAP ;
                 DUP ;
                 DUP ;
                 DUG 3 ;
                 CDR ;
                 DIG 2 ;
                 SUB ;
                 ABS ;
                 DIG 2 ;
                 CAR ;
                 ADD ;
                 UPDATE 1 ;
                 DUP 3 ;
                 GET 25 ;
                 DIG 2 ;
                 MUL ;
                 UPDATE 2 ;
                 SWAP ;
                 DUP ;
                 GET 5 ;
                 DIG 2 ;
                 DIG 3 ;
                 SWAP ;
                 SOME ;
                 SWAP ;
                 UPDATE ;
                 UPDATE 5 ;
                 DUP ;
                 GET 5 ;
                 DUP 3 ;
                 GET 3 ;
                 PAIR ;
                 DIG 3 ;
                 SWAP ;
                 EXEC ;
                 DUP ;
                 CAR ;
                 SWAP ;
                 DUP 5 ;
                 CAR ;
                 CAR ;
                 CDR ;
                 DUP 6 ;
                 CAR ;
                 CAR ;
                 CDR ;
                 DUP 4 ;
                 EDIV ;
                 IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                 CAR ;
                 MUL ;
                 DUP 3 ;
                 SUB ;
                 ABS ;
                 UPDATE 1 ;
                 DIG 2 ;
                 DUP ;
                 GET 5 ;
                 DIG 2 ;
                 DUP 5 ;
                 GET 3 ;
                 SWAP ;
                 SOME ;
                 SWAP ;
                 UPDATE ;
                 UPDATE 5 ;
                 DUP ;
                 DUP 5 ;
                 CAR ;
                 CAR ;
                 CDR ;
                 DUP 4 ;
                 EDIV ;
                 IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                 CAR ;
                 DIG 2 ;
                 GET 23 ;
                 ADD ;
                 UPDATE 23 ;
                 NIL operation ;
                 DUP 5 ;
                 CAR ;
                 CAR ;
                 CDR ;
                 DUP 4 ;
                 COMPARE ;
                 GE ;
                 IF { DIG 3 ;
                      CAR ;
                      PUSH mutez 1 ;
                      DIG 5 ;
                      CAR ;
                      CAR ;
                      CDR ;
                      DIG 5 ;
                      EDIV ;
                      IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                      CAR ;
                      MUL ;
                      UNIT ;
                      TRANSFER_TOKENS ;
                      CONS }
                    { DIG 2 ; DIG 3 ; DIG 4 ; DROP 3 } ;
                 PAIR } } } ;
  view "is_banned_baker"
       key_hash
       bool
       { UNPAIR ;
         SWAP ;
         GET 3 ;
         SWAP ;
         GET ;
         IF_NONE
           { PUSH timestamp 0 ; PUSH nat 0 ; PUSH nat 0 ; SWAP ; PAIR ; SWAP ; PAIR }
           {} ;
         NOW ;
         SWAP ;
         DUP ;
         DUG 2 ;
         GET 3 ;
         INT ;
         DIG 2 ;
         CAR ;
         ADD ;
         COMPARE ;
         GT } ;
  view "get_tez_balance"
       unit
       nat
       { DROP ;
         PUSH mutez 1 ;
         BALANCE ;
         EDIV ;
         IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
         CAR } ;
  view "get_user_candidate"
       address
       key_hash
       { UNPAIR ;
         SWAP ;
         DUP ;
         DUG 2 ;
         CAR ;
         SWAP ;
         GET ;
         IF_NONE
           { NONE key_hash ; PUSH nat 0 ; PUSH nat 0 ; SWAP ; PAIR ; SWAP ; PAIR }
           {} ;
         CAR ;
         IF_NONE { GET 7 } { SWAP ; DROP } } }

