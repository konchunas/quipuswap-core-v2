{ parameter
    (or (or (or (pair %ban_baker (key_hash %baker) (nat %ban_period))
                (pair %divest_tez (contract %recipient unit) (pair (address %user) (nat %amt))))
            (or (address %invest_tez)
                (pair %is_banned_baker (key_hash %baker) (contract %callback bool))))
        (pair %vote
           (address %voter)
           (pair (key_hash %candidate) (pair (nat %votes) (nat %cycle_duration))))) ;
  storage
    (pair (big_map %voters
             address
             (pair (option %candidate key_hash) (pair (nat %tez_bal) (nat %votes))))
          (pair (big_map %bakers
                   key_hash
                   (pair (timestamp %ban_start_time) (pair (nat %ban_period) (nat %votes))))
                (pair (key_hash %current_delegated)
                      (pair (key_hash %next_candidate)
                            (pair (address %baker_registry) (pair (address %dex_core) (nat %total_votes))))))) ;
  code { PUSH string "200" ;
         PUSH string "201" ;
         PUSH string "202" ;
         PAIR ;
         PAIR ;
         PUSH key_hash "tz1ZZZZZZZZZZZZZZZZZZZZZZZZZZZZNkiRg" ;
         PUSH address "tz1ZZZZZZZZZZZZZZZZZZZZZZZZZZZZNkiRg" ;
         PAIR ;
         PUSH nat 1000000000000000000 ;
         EMPTY_MAP string bytes ;
         PUSH bytes 0x68747470733a2f2f7175697075737761702e636f6d2f51504c502e706e67 ;
         SOME ;
         PUSH string "thumbnailUri" ;
         UPDATE ;
         PUSH bytes 0x515054 ;
         SOME ;
         PUSH string "symbol" ;
         UPDATE ;
         PUSH bytes 0x74727565 ;
         SOME ;
         PUSH string "shouldPreferSymbol" ;
         UPDATE ;
         PUSH bytes 0x517569707573776170204c5020546f6b656e ;
         SOME ;
         PUSH string "name" ;
         UPDATE ;
         PUSH bytes
              0x517569707573776170204c5020746f6b656e20726570726573656e7473207573657220736861726520696e20746865206c697175696469747920706f6f6c ;
         SOME ;
         PUSH string "description" ;
         UPDATE ;
         PUSH bytes 0x36 ;
         SOME ;
         PUSH string "decimals" ;
         UPDATE ;
         PAIR ;
         PAIR ;
         SWAP ;
         DUP ;
         DUG 2 ;
         LAMBDA
           (pair (pair (pair string string) string) address)
           unit
           { UNPAIR ;
             SWAP ;
             SENDER ;
             COMPARE ;
             NEQ ;
             IF { CDR ; FAILWITH } { DROP } ;
             UNIT } ;
         SWAP ;
         APPLY ;
         DIG 3 ;
         UNPAIR ;
         IF_LEFT
           { DIG 3 ;
             DROP ;
             IF_LEFT
               { IF_LEFT
                   { DIG 3 ;
                     DROP ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     GET 11 ;
                     DIG 3 ;
                     SWAP ;
                     EXEC ;
                     DROP ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     GET 3 ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     GET ;
                     IF_NONE
                       { PUSH timestamp 0 ; PUSH nat 0 ; PUSH nat 0 ; SWAP ; PAIR ; SWAP ; PAIR }
                       {} ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     UPDATE 3 ;
                     NOW ;
                     UPDATE 1 ;
                     DIG 2 ;
                     DUP ;
                     GET 3 ;
                     DIG 2 ;
                     DIG 3 ;
                     CAR ;
                     SWAP ;
                     SOME ;
                     SWAP ;
                     UPDATE ;
                     UPDATE 3 ;
                     NIL operation ;
                     PAIR }
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     GET 11 ;
                     DIG 3 ;
                     SWAP ;
                     EXEC ;
                     DROP ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     GET 3 ;
                     GET ;
                     IF_NONE
                       { NONE key_hash ; PUSH nat 0 ; PUSH nat 0 ; SWAP ; PAIR ; SWAP ; PAIR }
                       {} ;
                     DUP ;
                     GET 3 ;
                     DUP 3 ;
                     GET 4 ;
                     COMPARE ;
                     GT ;
                     PUSH mutez 1 ;
                     BALANCE ;
                     EDIV ;
                     IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                     CAR ;
                     DUP 4 ;
                     GET 4 ;
                     COMPARE ;
                     GT ;
                     OR ;
                     IF { DIG 3 ; CAR ; CDR ; FAILWITH } { DIG 3 ; DROP } ;
                     DIG 2 ;
                     DUP ;
                     CAR ;
                     DUP 3 ;
                     DUP 5 ;
                     GET 4 ;
                     DIG 4 ;
                     GET 3 ;
                     SUB ;
                     ABS ;
                     UPDATE 3 ;
                     DUP 4 ;
                     GET 3 ;
                     SWAP ;
                     SOME ;
                     SWAP ;
                     UPDATE ;
                     UPDATE 1 ;
                     NIL operation ;
                     DUP 3 ;
                     GET 4 ;
                     DIG 3 ;
                     CAR ;
                     PUSH mutez 1 ;
                     DIG 2 ;
                     MUL ;
                     UNIT ;
                     TRANSFER_TOKENS ;
                     CONS ;
                     PAIR } }
               { DIG 3 ;
                 DROP ;
                 IF_LEFT
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     GET 11 ;
                     DIG 3 ;
                     SWAP ;
                     EXEC ;
                     DROP ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     GET ;
                     IF_NONE
                       { NONE key_hash ; PUSH nat 0 ; PUSH nat 0 ; SWAP ; PAIR ; SWAP ; PAIR }
                       {} ;
                     DIG 2 ;
                     DUP ;
                     CAR ;
                     DUP 3 ;
                     PUSH mutez 1 ;
                     AMOUNT ;
                     EDIV ;
                     IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                     CAR ;
                     DIG 4 ;
                     GET 3 ;
                     ADD ;
                     UPDATE 3 ;
                     DIG 3 ;
                     SWAP ;
                     SOME ;
                     SWAP ;
                     UPDATE ;
                     UPDATE 1 ;
                     NIL operation ;
                     PAIR }
                   { DIG 2 ;
                     DROP ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     NIL operation ;
                     DUP 3 ;
                     CDR ;
                     PUSH mutez 0 ;
                     DIG 5 ;
                     GET 3 ;
                     DIG 5 ;
                     CAR ;
                     GET ;
                     IF_NONE
                       { PUSH timestamp 0 ; PUSH nat 0 ; PUSH nat 0 ; SWAP ; PAIR ; SWAP ; PAIR }
                       {} ;
                     NOW ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     GET 3 ;
                     INT ;
                     DIG 2 ;
                     CAR ;
                     ADD ;
                     COMPARE ;
                     GT ;
                     TRANSFER_TOKENS ;
                     CONS ;
                     PAIR } } }
           { SWAP ;
             DUP ;
             DUG 2 ;
             GET 11 ;
             DIG 3 ;
             SWAP ;
             EXEC ;
             DROP ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             GET ;
             IF_NONE
               { NONE key_hash ; PUSH nat 0 ; PUSH nat 0 ; SWAP ; PAIR ; SWAP ; PAIR }
               {} ;
             DUP ;
             CAR ;
             IF_NONE
               { DUP 3 }
               { DUP 4 ;
                 GET 3 ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 GET ;
                 IF_NONE
                   { PUSH timestamp 0 ; PUSH nat 0 ; PUSH nat 0 ; SWAP ; PAIR ; SWAP ; PAIR }
                   {} ;
                 DIG 4 ;
                 DUP ;
                 DUP ;
                 DUG 6 ;
                 GET 3 ;
                 DUP 5 ;
                 GET 4 ;
                 DUP 4 ;
                 GET 4 ;
                 SUB ;
                 ISNAT ;
                 IF_NONE { DIG 2 } { DIG 3 ; SWAP ; UPDATE 4 } ;
                 DIG 3 ;
                 SWAP ;
                 SOME ;
                 SWAP ;
                 UPDATE ;
                 UPDATE 3 } ;
             DUP ;
             GET 3 ;
             DUP 4 ;
             GET 3 ;
             GET ;
             IF_NONE
               { PUSH timestamp 0 ; PUSH nat 0 ; PUSH nat 0 ; SWAP ; PAIR ; SWAP ; PAIR }
               {} ;
             DUP 4 ;
             GET 5 ;
             SWAP ;
             DUP ;
             DUG 2 ;
             GET 4 ;
             ADD ;
             DIG 2 ;
             DUP ;
             GET 3 ;
             DUP 4 ;
             DUP 7 ;
             GET 3 ;
             SWAP ;
             SOME ;
             SWAP ;
             UPDATE ;
             UPDATE 3 ;
             DUP ;
             CAR ;
             PUSH nat 0 ;
             DUP 6 ;
             GET 4 ;
             COMPARE ;
             NEQ ;
             IF { DIG 4 ; DUP 6 ; GET 3 ; SOME ; UPDATE 1 }
                { DIG 4 ; NONE key_hash ; UPDATE 1 } ;
             DUP 6 ;
             GET 5 ;
             UPDATE 4 ;
             DUP 6 ;
             CAR ;
             SWAP ;
             SOME ;
             SWAP ;
             UPDATE ;
             UPDATE 1 ;
             DUP ;
             GET 3 ;
             SWAP ;
             DUP ;
             DUG 2 ;
             GET 5 ;
             GET ;
             IF_NONE
               { PUSH timestamp 0 ; PUSH nat 0 ; PUSH nat 0 ; SWAP ; PAIR ; SWAP ; PAIR }
               {} ;
             SWAP ;
             DUP ;
             DUG 2 ;
             GET 3 ;
             DUP 3 ;
             GET 7 ;
             GET ;
             IF_NONE
               { PUSH timestamp 0 ; PUSH nat 0 ; PUSH nat 0 ; SWAP ; PAIR ; SWAP ; PAIR }
               {} ;
             SWAP ;
             DUP ;
             DUG 2 ;
             GET 4 ;
             DIG 4 ;
             COMPARE ;
             GT ;
             IF { DIG 3 ; DROP ; DIG 2 ; DUP ; GET 5 ; UPDATE 7 ; DIG 3 ; GET 3 ; UPDATE 5 }
                { DUP ;
                  GET 4 ;
                  DIG 4 ;
                  GET 4 ;
                  COMPARE ;
                  GT ;
                  IF { DIG 2 ; DIG 3 ; GET 3 ; UPDATE 7 }
                     { DIG 3 ;
                       DROP ;
                       SWAP ;
                       DUP ;
                       DUG 2 ;
                       GET 4 ;
                       SWAP ;
                       DUP ;
                       DUG 2 ;
                       GET 4 ;
                       COMPARE ;
                       GT ;
                       IF { DIG 2 ; DUP ; DUP ; DUG 4 ; GET 7 ; UPDATE 5 ; DIG 3 ; GET 5 ; UPDATE 7 }
                          { DIG 2 } } } ;
             NOW ;
             DUP 3 ;
             GET 3 ;
             INT ;
             DIG 3 ;
             CAR ;
             ADD ;
             COMPARE ;
             GT ;
             IF { DUP 4 ; CDR ; CDR ; UPDATE 7 } {} ;
             NOW ;
             DUP 3 ;
             GET 3 ;
             INT ;
             DIG 3 ;
             CAR ;
             ADD ;
             COMPARE ;
             GT ;
             IF { SWAP ;
                  DIG 3 ;
                  DROP 2 ;
                  NIL operation ;
                  NONE key_hash ;
                  SET_DELEGATE ;
                  CONS ;
                  SWAP ;
                  DIG 2 ;
                  CDR ;
                  CDR ;
                  UPDATE 5 ;
                  SWAP ;
                  PAIR }
                { DIG 2 ;
                  DROP ;
                  SWAP ;
                  GET 5 ;
                  SWAP ;
                  DUP ;
                  DUG 2 ;
                  GET 5 ;
                  COMPARE ;
                  NEQ ;
                  IF { NIL operation ;
                       SWAP ;
                       DUP ;
                       DUG 2 ;
                       GET 5 ;
                       SOME ;
                       SET_DELEGATE ;
                       CONS ;
                       SWAP ;
                       DUP ;
                       DUG 2 ;
                       GET 9 ;
                       CONTRACT %validate key_hash ;
                       IF_NONE { DIG 2 ; CAR ; CAR ; FAILWITH } { DIG 3 ; DROP } ;
                       PUSH mutez 0 ;
                       DUP 4 ;
                       GET 5 ;
                       TRANSFER_TOKENS ;
                       CONS }
                     { SWAP ; DROP ; NIL operation } ;
                  PAIR } } } }

